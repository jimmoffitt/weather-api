DESCRIPTION >
	Creates an API Endpoint that provides information on usage and billing:
[https://api.tinybird.co/v0/pipes/tinybird_billing.json](https://api.tinybird.co/v0/pipes/tinybird_billing.json).

By default this Pipe/Endpoint will provide totals for the *month-to-date*, and `start_date` and `end_date` query parameters are available to select a different date range.



This Pipe contains five Nodes: 1) `cost_variables`, 2) `processed_ingest`, 3) `processed_APIs`, 4) `storage`, and 5) `endpoint`. See below for descriptions of these Nodes. Actually, there is a sixth Node, called `total_cost` that adds up all the resources reported on in the `endpoint` Node.


TOKEN "billing_endpoint_read_0643" READ

NODE cost_variables
DESCRIPTION >
    This Node sets two contants for the Tinybird prices for stored and processed data per gigabyte (GB). Details are available here: [tinybird.co/pricing](https://www.tinybird.co/pricing) and [tinybird.co/docs/billing/plans-and-pricing](https://www.tinybird.co/docs/billing/plans-and-pricing.html).

SQL >

    SELECT
        0.07 AS price_per_processed_gb,
        0.34 AS price_per_stored_gb



NODE processed_ingest
DESCRIPTION >
    Retrieves the amount of processed data associated with writing/ingesting data to Data Sources. This includes when you create, append, delete or replace data in a Data Source. This also includes the data written to Materialized Views *after*  they are created. There is no charge when you first create and populate a Materialized View, only incremental updates are billed.

    By default this Node provides totals for the month-to-date.

SQL >

    %
            SELECT
                datasource_name AS resource,
                'datasource' AS resource_type,
                sum(read_bytes) / pow(10, 9) AS gb_read,
                sum(written_bytes) / pow(10, 9) AS gb_written
            FROM tinybird.datasources_ops_log
            WHERE
                event_type NOT IN ('populateview', 'populateview-queued')
                {% if defined(start_date) and defined(end_date) %}
                    AND toDate(timestamp) BETWEEN {{Date(start_date, description="Start date in format YYYY-MM-DD. Defaults to the start of the month if not defined.")}}
                    AND {{Date(end_date, description="End date in format YYYY-MM-DD. Defaults to today if not defined.")}}
                {% else %}
                    AND toDate(timestamp) BETWEEN toStartOfMonth(today()) AND today()
                {% end %}
                {% if defined(resources) %}
                    AND resource IN {{Array(resources, 'String', description="Comma-separated resources. Defaults to all if not defined.")}}
                {% end %}
            GROUP BY resource, resource_type
            ORDER BY gb_written DESC



NODE processed_APIs
DESCRIPTION >
    Retrieves the amount of processed data associated with reading data from Data Sources. You read data when you run queries against your Data Sources to generate responses to API Endpoint requests. You also read data when you make requests to the Query API.

    A reminder that manually executing a query inside the Tinybird UI is free. This means that you can develop, experiment and iterate inside the Tinybird UI without incurring additional cost.

    By default this Node provides totals for the month-to-date.

SQL >

    %
    SELECT
                pipe_name AS resource,
                if(resource == 'query_api', 'query_api', 'pipe') AS resource_type,
                sum(read_bytes_sum) / pow(10, 9) AS gb_read
            FROM tinybird.pipe_stats
            WHERE
                1 = 1
                {% if defined(start_date) and defined(end_date) %}
                    AND date BETWEEN {{ Date(start_date) }} AND {{ Date(end_date) }}
                {% else %} 
                    AND date BETWEEN toStartOfMonth(today()) AND today()
                {% end %}
                {% if defined(resources) %}
                    AND resource IN {{ Array(resources, "String") }}
                {% end %}
            GROUP BY resource, resource_type
            ORDER BY gb_read DESC



NODE storage
DESCRIPTION >
    Data storage refers to the disk storage of all the data you keep in Tinybird. This includes all of your Data Sources and Materialized Views, and well as any quarantined data. Data storage pricing is based on the amount of storage used after compression. 

    For billing, a measurement of this storage is made at the end of every month. This Node queries for the maximum amount of stored data over the previous day by default. The maximum storage can be queried using the `start_date` and `end_date` parameters

SQL >

    %
        SELECT
            toStartOfMonth(day) AS month,
            resource,
            resource_type,
            argMax(gb_stored, day) AS gb_stored
        FROM
            (
                SELECT
                    toDate(timestamp) AS day,
                    datasource_name AS resource,
                    'datasource' AS resource_type,
                    (max(bytes) + max(bytes_quarantine)) / pow(10, 9) AS gb_stored
                FROM tinybird.datasources_storage
                WHERE
                    1 = 1
                    {% if defined(start_date) and defined(end_date) %}
                        AND toDate(timestamp) BETWEEN {{ Date(start_date) }}
                        AND {{ Date(end_date) }}
                    {% else %}
                        AND toDate(timestamp) BETWEEN addDays(today(), -1) AND today()
                    {% end %}
                    {% if defined(resources) %}
                        AND resource IN {{ Array(resources, "String") }}
                    {% end %}
                GROUP BY day, resource, resource_type
            )
        GROUP BY month, resource, resource_type
        ORDER BY gb_stored DESC



NODE endpoint
DESCRIPTION >
    This Node calculates the estimated stored and processed data costs for each Data Sources, Materialize Views, and Pipes, as well as any Query API usages. To estimate total cost for the selected data range (defaults to month-to-date), you need to add all the ''resource_total_cost" values (or run the following Node to check).

SQL >

    WITH
        (SELECT price_per_processed_gb FROM cost_variables) AS price_per_processed_gb,
        (SELECT price_per_stored_gb FROM cost_variables) AS price_per_stored_gb
    SELECT
        resource,
        resource_type,
        round((gb_read + gb_written) * price_per_processed_gb, 4) AS processed_cost,
        round(gb_stored * price_per_stored_gb, 4) AS stored_cost,
        round(processed_cost + stored_cost, 4) AS total_cost,
        sum(gb_read) AS gb_read,
        sum(gb_written) AS gb_written,
        sum(gb_stored) AS gb_stored
    FROM
        (
            SELECT resource, resource_type, gb_read, gb_written, 0 AS gb_stored
            FROM processed_ingest
            UNION ALL
            SELECT resource, resource_type, gb_read, 0 AS gb_written, 0 AS gb_stored
            FROM processed_APIs
            UNION ALL
            SELECT
                resource,
                resource_type,
                0 AS gb_read,
                0 AS gb_written,
                sum(gb_stored) AS gb_stored
            FROM storage
            GROUP BY resource, resource_type
        )
    WHERE total_cost > 0
    GROUP BY resource, resource_type
    ORDER BY total_cost desc



NODE total_cost
DESCRIPTION >
    Creates an total cost estimate for all resources in the Workspace. By default, this provides totals for the month-to-date.

SQL >

    SELECT round(sum(resource_total_cost), 2) AS "total_cost" FROM endpoint


